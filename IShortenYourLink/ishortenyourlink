#!/usr/bin/env bash

################################################################
#   Title: I Shorten Your Link Bot                             #
#   Author: Panda Foss                                         #
#   Website: https://pandafoss.github.io/                      #
#   Github: https://github.com/PandaFoss/                      #
#   License: GPLv3 and later                                   #
################################################################

#===  CHECKING TOKENS FILE  ====================================

[[ -f ./tokens ]] && . ./tokens

#== Constants ==================================================

readonly BOT_TOKEN
readonly OUO_API
readonly OUO_REFERRAL
readonly LOGFILE="./history.log"
readonly TIMEOUT="10"
readonly URL="https://api.telegram.org/bot${BOT_TOKEN}"
readonly BOTNAME="$(curl --silent "${URL}/getMe"               \
                    | jq .result.username                      \
                    | tr -d '"')"

#== Functions ==================================================

################################################################
#   Description: Sending request to telegram api
#   Arguments: Text to be sent
#   Output: none
################################################################
send_text(){
    local TEXT=$( sed 's/^\s\+//g' <<< "${1}" )
    curl --silent "${URL}/sendMessage"                         \
            --max-time "${TIMEOUT}"                            \
            --output /dev/null                                 \
            --data-urlencode "text=${TEXT}"                    \
                --data "chat_id=${CHAT_ID}"                    \
                --data "disable_web_page_preview=${PREVIEW}"   \
                --data "parse_mode=${PARSE_MODE}"
}

################################################################
#   Description: Check that the link is valid
#   Arguments: Text (pretends to be a link)
#   Output: 0 if it is a valid link, 1 if it is not
################################################################

link_checker() {
    local HTTP_STATUS_CODE="$(curl --silent                    \
                                   --head                      \
                                   --output /dev/null          \
                                   --write-out "%{http_code}"  \
                                   ${1})"
    if [[ ${HTTP_STATUS_CODE} -ge 100 ]]; then
        if [[ ${HTTP_STATUS_CODE} -le 400 ]]; then
            return 0
        else
            return 1
        fi
    else
        return 1
    fi
}

################################################################
#   Description: Generate ouo.io link
#   Arguments: Valid link to shorten
#   Output: OUO_LINK
################################################################
generate_short_link(){
    local LINK="${OUO_API}${1}"
    local OUO_LINK="$(curl --silent ${LINK})" 2> ${LOGFILE}
    send_text "${OUO_LINK}" 1>&2
}

################################################################
#   Description: Offset messages
#   Arguments: none
#   Output: none
################################################################
offset(){

               curl --silent "${URL}/getUpdates"               \
                    --data "offset=$((UPDATE_ID + 1))"         \
                    --output /dev/null

}

################################################################
#   Description: Send unknown command message to Telegram API
#   Arguments: none
#   Output: none
################################################################
unknown_command(){
    local TEXT=$(sed 's/^ \+//' <<<"
                 ⚠️  ***Incorrect command or link*** ⚠️ 

                ___Try again by submitting a valid link.___
                ")
    send_text "${TEXT}"
}

################################################################
#   Description: Send start command message to Telegram API
#   Arguments: none
#   Output: none
################################################################
start_command(){
    PREVIEW=1
    local TEXT=$(sed 's/^ \+//' <<<"
            ℹ️ ***INFO***

            Hello! I allow you to shorten your web links in a simple and effective way. Just send me the link to shorten and I'll do my job!
            At the moment I only shorten links with \`ouo.io\`, but I will add more soon.

            Do you want to earn money by shortening links with \`ouo.io\`? Sign up [here](${OUO_REFERRAL}), it's free!

            💻 ***DEVELOPER***

            Developed by @PandaFoss
            Source Code: https://github.com/PandaFoss/TelegramBashBots
            ")
    send_text "${TEXT}"

}
#===  END OF FUNCTIONS  ========================================

while sleep 1; do

    PARSE_MODE="markdown"
    RAW_MESSAGE=$( curl -s "${URL}/getUpdates" )
    MSG_COUNT=$( jq '.result | length' <<< "${RAW_MESSAGE}" )

    for i in $( seq 1 "${MSG_COUNT:=0}" ); do

        RESULT_COUNTER=$(( i-1 ))

        UPDATE_ID=$( jq .result[${RESULT_COUNTER}].update_id <<< "${RAW_MESSAGE}"  )
        CHAT_ID=$( jq .result[${RESULT_COUNTER}].message.chat.id <<< "${RAW_MESSAGE}"  )

        #-------------------------------------------------------------------------------
        # Checking that the command was sent to your bot
        #-------------------------------------------------------------------------------
        PRIVATE=$( jq  -r .result[${RESULT_COUNTER}].message.chat.type <<< "${RAW_MESSAGE}"  | sed 's/private/true/' )
        CMD_CHECK=$( jq  -r .result[${RESULT_COUNTER}].message.text <<< "${RAW_MESSAGE}"  )
        if [[ "${CMD_CHECK}" =~ ${BOTNAME/$/\\b} ]]; then
            MESSAGE=$( sed -r "s/${BOTNAME}//" <<< "${CMD_CHECK}" )
        else
            MESSAGE="${CMD_CHECK}"
        fi

        #-------------------------------------------------------------------------------
        # If it is not a command, create a command /message with the message
        #-------------------------------------------------------------------------------
        if [[ ! "${MESSAGE}" =~ ^/[a-zA-Z0-9]+ ]]; then
            MESSAGE=$(sed --regexp-extended "s/^/\/message &/" <<< "${MESSAGE}")
        fi

        ARGS=$( awk '{$1="";print $0}' <<< "${MESSAGE}" | xargs 2>/dev/null )
        COMMAND=$( awk '{print $1}' <<< "${MESSAGE}" )
        SENDER=$( jq -r .result[${RESULT_COUNTER}].message.from.username <<< "${RAW_MESSAGE}" )

        case "${COMMAND}" in
            /start)
                start_command
                ;;
            /message)
                if link_checker "${ARGS}" ; then
                    generate_short_link "${ARGS}"
                else
                    unknown_command
                fi
                ;;
            /*)
                unknown_command
                ;;
        esac

        offset
    done
done
